//
// gp-webrtc/firebase
// Copyright (c) 2024, Greg PFISTER. MIT License.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of
// this software and associated documentation files (the “Software”), to deal in
// the Software without restriction, including without limitation the rights to
// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
// the Software, and to permit persons to whom the Software is furnished to do so,
// subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
//

// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.231.6/containers/ubuntu
{
  // "name": "gp-webrtc-firebase",
  // "build": {
  //   "dockerfile": "Dockerfile",
  //   "args": {}
  // },
  "dockerComposeFile": "docker-compose.yaml",
  "service": "gp-webrtc-firebase",
  "workspaceFolder": "/workspace",
  "containerUser": "vscode",

  // Customizations
  "customizations": {
    "vscode": {
      "settings": {
        // "editor.codeActionsOnSave": {
        //   "source.organizeImports": "always",
        //   "source.fixAll": "always"
        // },
        "remote.localPortHost": "allInterfaces",
        "atlascode.bitbucket.contextMenus.enabled": false,
        "atlascode.bitbucket.enabled": false,
        "atlascode.bitbucket.explorer.enabled": false,
        "atlascode.bitbucket.explorer.nestFilesEnabled": false,
        "atlascode.bitbucket.explorer.notifications.pullRequestCreated": false,
        "atlascode.bitbucket.explorer.relatedBitbucketIssues.enabled": false,
        "atlascode.bitbucket.explorer.showReviewedPullRequests": false,
        "atlascode.bitbucket.issues.explorerEnabled": false,
        "atlascode.bitbucket.issues.monitorEnabled": false,
        "atlascode.bitbucket.pipelines.explorerEnabled": false,
        "atlascode.bitbucket.pipelines.hideEmpty": false,
        "atlascode.bitbucket.pipelines.monitorEnabled": false,
        "atlascode.bitbucket.statusbar.enabled": false,
        "atlascode.bitbucket.statusbar.showLogin": false,
        "atlascode.bitbucket.statusbar.showProduct": false,
        "atlascode.bitbucket.statusbar.showUser": false
      },
      "extensions": [
        "Angular.ng-template",
        "dbaeumer.vscode-eslint",
        "me-dutour-mathieu.vscode-firebase",
        "toba.vsfire",
        "donjayamanne.githistory",
        "eamodio.gitlens",
        "yzhang.markdown-all-in-one",
        "hbenl.vscode-mocha-test-adapter",
        "christian-kohler.npm-intellisense",
        "quicktype.quicktype",
        "esbenp.prettier-vscode",
        "ms-vscode.test-adapter-converter",
        "hbenl.vscode-test-explorer",
        "Gruntfuggly.todo-tree",
        "DotJoshJohnson.xml",
        "redhat.vscode-yaml",
        "github.vscode-pull-request-github",
        "atlassian.atlascode",
        "ms-azuretools.vscode-docker"
      ]
    }
  },

  // Use 'postCreateCommand' to run commands after the container is created.
  "postAttachCommand": "cp /workspace/scripts/pre-commit /workspace/.git/hooks/",

  // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "vscode",
  "updateRemoteUserUID": false,

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [80, 5001, 8000, 8080, 9199],
  "portsAttributes": {
    "80": {
      "label": "nginx",
      "onAutoForward": "notify"
    },
    "8000": {
      "label": "Firebase Emulator UI",
      "onAutoForward": "notify"
    },
    "8080": {
      "label": "Firebase Emulator Firestore",
      "onAutoForward": "notify"
    },
    "5001": {
      "label": "Firebase Emulator Functions",
      "onAutoForward": "notify"
    },
    "9199": {
      "label": "Firebase Emulator Storage",
      "onAutoForward": "notify"
    }
  }
}
